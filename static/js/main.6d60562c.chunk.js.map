{"version":3,"sources":["API.js","Components/ScrollToTop.js","Components/SearchBar.js","Components/Heading.js","Components/Description.js","Components/Tags.js","Components/TimePeriod.js","Components/JumboListing.js","Pages/Education.js","Pages/Experience.js","Components/ContactForm.js","Pages/Home.js","Components/ExternalButton.js","Components/CardListing.js","Pages/Projects.js","Pages/SearchResults.js","App.js","index.js","Images/project.png"],"names":["API","this","allTags","tagsFiltered","data","Experiences","Education","Projects","type","completion","getDataAsObjects","dataObjects","item","i","length","id","push","tags","split","title","description","map","tag","value","toLowerCase","trim","tagObj","label","getTagFormatted","sort","tag1","tag2","localeCompare","gallery","startTime","term","endTime","projectType","url","getSortByDate","comparisonArray","currentYear","Date","getFullYear","toString","obj1","obj2","date1","date2","indexOf","displayTag","npm","javascript","react","html","css","sql","scss","mongodb","mysql","express","xcode","jquery","php","json","wordpress","toUpperCase","slice","shouldReturn","_","uniqBy","ScrollToTop","prevProps","props","location","pathname","window","scrollTo","children","Component","withRouter","SearchBar","state","selectedTag","redirectToSearch","handleChange","setState","history","alert","Form","inline","options","name","styles","container","provided","width","margin","className","onChange","Button","variant","onClick","searchForTag","bind","Heading","Fragment","heading","style","textAlign","Description","index","key","Tags","fontWeight","renderTags","TimePeriod","color","JumboListing","Jumbotron","Container","subtitle","Row","Col","xs","md","education","course","sourceCodeUrl","showInfo","Image","src","fluid","rounded","marginBottom","renderRelevantCoursework","defaultProps","Experience","experiences","experience","renderExperiences","ContactForm","sm","float","recaptchaRef","React","createRef","action","method","onSubmit","current","execute","FormControl","required","as","rows","ref","size","sitekey","renderSubmitButton","Home","submitted","scroll","top","left","behavior","hr","display","justifyContent","alignItems","profileImage","roundedCircle","boxShadow","aboutMe","para","message","email","rating","flexDirection","Provider","padding","parsed","require","parse","search","renderAboutMe","submit","renderFormSubmitted","ExternalButton","text","open","CardListing","Card","bg","href","galleryUrl","target","rel","Img","Body","Title","Text","Footer","decks","projects","project","ProjectPicture","CardDeck","renderProjects","SearchResults","queryString","newProps","componentDidMount","tagValue","filter","filterData","tagLabel","App","loading","api","get","Navbar","expand","sticky","to","activeClassName","Toggle","aria-controls","Collapse","Nav","getUniqueTags","height","timeout","path","render","component","renderSocialIcons","isLoadingData","renderNavBar","renderActivityIndicator","renderContent","renderFooter","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6d60562c.chunk.js","sourcesContent":["import _ from 'lodash';\nimport Experiences from './Data/Experiences.json';\nimport Education from './Data/Education.json';\nimport Projects from './Data/Projects.json';\n// import data from \"./myjsonfile.json\";\n\nexport default class API {\n  constructor() {\n    this.allTags = [];\n    this.tagsFiltered = false;\n    this.data = {\n      Experiences: Experiences,\n      Education: Education,\n      Projects: Projects,\n    };\n  }\n\n  get(type, completion) {\n    completion(this.getDataAsObjects(this.data[type]));\n  }\n\n  getDataAsObjects(data) {\n    const dataObjects = [];\n    let item = null;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].id !== '') {\n        if (item) dataObjects.push(item);\n        const tags = typeof(data[i].tags) === 'string' ? data[i].tags.split(',') : data[i].tags;\n        item = {\n          id: data[i].id,\n          title: data[i].title,\n          description: typeof(data[i].description) === 'string' ? [data[i].description] : data[i].description,\n          tags: tags\n            .map((tag) => {\n              const value = tag.toLowerCase().trim();\n              const tagObj = {\n                value,\n                label: this.getTagFormatted(value),\n              };\n              this.allTags.push(tagObj);\n              return tagObj;\n            })\n            .sort(function (tag1, tag2) {\n              return tag1.value.localeCompare(tag2.value);\n            }),\n          gallery: data[i].gallery,\n          startTime: data[i].startTime ? data[i].startTime : data[i].term,\n          endTime: data[i].endTime !== '' ? data[i].endTime : null,\n          projectType: data[i].projectType,\n          url: data[i].url,\n        };\n      } else if (data[i].description !== '') {\n        item.description.push(data[i].description);\n        // if (experiencesData[i].tags !== '') item.tags.push(experiencesData[i].tags);\n      }\n    }\n    dataObjects.push(item);\n    return this.getSortByDate(dataObjects);\n  }\n\n  getSortByDate(dataObjects) {\n    const comparisonArray = [\n      'Winter',\n      'Jan',\n      'Feb',\n      'Mar',\n      'Spring',\n      'Apr',\n      'May',\n      'Jun',\n      'Summer',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Fall',\n      'Oct',\n      'Nov',\n      'Dec',\n      'Present',\n    ];\n    const currentYear = new Date().getFullYear().toString();\n    return dataObjects.sort((obj1, obj2) => {\n      const date1 = obj1.endTime ? obj1.endTime.split(' ') : obj1.startTime.split(' ');\n      const date2 = obj2.endTime ? obj2.endTime.split(' ') : obj2.startTime.split(' ');\n      if (date1.length < 2) {\n        date1.push(currentYear)\n      }\n      if (date2.length < 2) {\n        date2.push(currentYear)\n      }\n      if (date1[1] === date2[1]) { // the year is the same...\n        return (\n          comparisonArray.indexOf(date2[0]) - comparisonArray.indexOf(date1[0])\n        );\n      }\n      return date2[1] - date1[1];\n    });\n  }\n\n  getTagFormatted(tag: string): String {\n    const special = {\n      npm: 'npm',\n      javascript: 'JavaScript',\n      react: 'React',\n      'react-native': 'React-Native',\n      html: 'HTML',\n      css: 'CSS',\n      sql: 'SQL',\n      scss: 'SCSS',\n      mongodb: 'MongoDB',\n      mysql: 'MySQL',\n      express: 'Express',\n      xcode: 'XCode',\n      jquery: 'jQuery',\n      php: 'PHP',\n      'android studio': 'Android Studio',\n      json: 'JSON',\n      'ruby on rails': 'Ruby on Rails',\n      'sql server': 'SQL Server',\n      wordpress: 'WordPress',\n      'visual basic': 'Visual Basic',\n      'jdbc': 'JDBC'\n    };\n    const displayTag = special[tag];\n    return displayTag ? displayTag : tag[0].toUpperCase() + tag.slice(1);\n  }\n\n  getUniqueTags(shouldReturn: boolean) {\n    if (shouldReturn)\n      return _.uniqBy(this.allTags, 'value').sort(function (tag1, tag2) {\n        return tag1.value.localeCompare(tag2.value);\n      });\n    return [];\n  }\n}\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import { Button, Form } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SearchBar extends Component {\n  static propTypes = {\n    options: PropTypes.array,\n  };\n\n  state = {\n    selectedTag: null,\n    redirectToSearch: false,\n  };\n\n  handleChange = (selectedTag) => {\n    this.setState({ selectedTag });\n  };\n\n  searchForTag() {\n    const { selectedTag } = this.state;\n    // this.setState({ selectedTag: null });\n    if (selectedTag) {\n      this.props.history.push(\n        `/search?tagValue=${selectedTag.value}&tagLabel=${selectedTag.label}`\n      );\n    } else {\n      alert(\"Please choose a tag to search for\");\n    }\n  }\n\n  render() {\n    return (\n      <Form inline>\n        <Select\n          options={this.props.options}\n          name=\"search\"\n          styles={{\n            container: (provided, state) => ({\n              ...provided,\n              width: 200,\n              margin: 5,\n            }),\n          }}\n          className=\"mr-sm-3\"\n          onChange={this.handleChange}\n          value={this.state.selectedTag}\n          // isMulti\n        />\n        <Button variant=\"secondary\" onClick={this.searchForTag.bind(this)}>\n          Search\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nclass Heading extends Component {\n  render() {\n    if (this.props.type === \"h2\") {\n      return (\n        <React.Fragment>\n          <h2>{this.props.heading}</h2>\n          <hr></hr>\n        </React.Fragment>\n      );\n    }\n    return (\n      <React.Fragment>\n        <h1 style={{ textAlign: \"center\" }}>{this.props.heading}</h1>\n        <hr className={\"style-one\"}></hr>\n      </React.Fragment>\n    );\n  }\n}\n\nHeading.propTypes = {\n  heading: PropTypes.string,\n  type: PropTypes.string\n};\n\nexport default Heading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaCheck } from \"react-icons/fa\";\n\nclass Description extends Component {\n  render() {\n    return this.props.description.map((item, index) => {\n      return (\n        <p key={\"description-\" + index}>\n          <FaCheck /> <span>{item}</span>\n        </p>\n      );\n    });\n  }\n}\n\nDescription.propTypes = {\n  description: PropTypes.arrayOf(String)\n};\n\nexport default Description;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Tags extends Component {\n  searchForTag(selectedTag) {\n    this.props.history.push(\n      `/search?tagValue=${selectedTag[0].value}&tagLabel=${selectedTag[0].label}`\n    );\n  }\n  renderTags() {\n    return this.props.tags.map((tag, index) => {\n      return (\n        <span key={\"tag-\" + index}>\n          <button\n            className={\"tag-button\"}\n            onClick={this.searchForTag.bind(this, [tag])}\n          >\n            {tag.label}\n          </button>\n          {/* {tag.label} */}\n        </span>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <p>\n        <span style={{ fontWeight: 500 }}>{\"Related Technologies: \"}</span>\n        {this.renderTags()}\n      </p>\n    );\n  }\n}\n\nTags.propTypes = {\n  tags: PropTypes.arrayOf(String)\n};\n\nexport default withRouter(Tags);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaCalendarAlt } from \"react-icons/fa\";\n\nclass TimePeriod extends Component {\n  render() {\n    return (\n      <p style={{ color: \"gray\" }}>\n        <FaCalendarAlt />\n        {` ${this.props.startTime}`}\n        {this.props.endTime ? ` - ${this.props.endTime}` : \"\"}\n      </p>\n    );\n  }\n}\n\nTimePeriod.propTypes = {\n  startTime: PropTypes.string.isRequired,\n  endTime: PropTypes.string\n};\n\nexport default TimePeriod;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\nimport Description from './Description';\nimport Tags from './Tags';\nimport TimePeriod from './TimePeriod';\n\nclass JumboListing extends Component {\n  render() {\n    const { description, tags } = this.props;\n    return (\n      <Jumbotron\n        className={\n          this.props.type === 'ShadowBox' ? 'jumbo-shadow' : 'jumbo-gray'\n        }\n      >\n        <Container>\n          <h3>\n            {this.props.title}{' '}\n            {this.props.subtitle && (\n              <span className='subtitle'>@ {this.props.subtitle}</span>\n            )}\n          </h3>\n          <TimePeriod\n            startTime={this.props.startTime}\n            endTime={this.props.endTime}\n          />\n          <hr />\n          <Row>\n            {this.props.gallery && (\n              <Col xs={12} md={5}>\n                {this.props.gallery}\n              </Col>\n            )}\n            <Col xs={12} md={this.props.gallery ? 7 : 12}>\n              <Description description={description}></Description>\n            </Col>\n          </Row>\n          <hr />\n          {tags && <Tags tags={tags}></Tags>}\n          {/* <ExternalButton\n            url=\"#\"\n            text=\"Learn More\"\n            variant=\"primary\"\n          ></ExternalButton> */}\n        </Container>\n      </Jumbotron>\n    );\n  }\n}\n\nJumboListing.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  description: PropTypes.arrayOf(PropTypes.string).isRequired,\n  startTime: PropTypes.string.isRequired,\n  // Optional\n  tags: PropTypes.arrayOf(PropTypes.object),\n  gallery: PropTypes.element,\n  endTime: PropTypes.string,\n  sourceCodeUrl: PropTypes.string,\n  type: PropTypes.oneOf(['GrayBox', 'ShadowBox']),\n};\n\nexport default JumboListing;\n","import React, { Component } from 'react';\n\nimport Heading from '../Components/Heading';\nimport { Image } from 'react-bootstrap';\nimport JumboListing from '../Components/JumboListing';\nimport PropTypes from 'prop-types';\n\nexport default class Education extends Component {\n  renderRelevantCoursework() {\n    return this.props.education.map((course, index) => {\n      return (\n        <JumboListing\n          key={`course-${index}`}\n          title={course.title}\n          description={course.description}\n          tags={course.tags}\n          sourceCodeUrl={'https://github.com/rupaltotale'}\n          type={'GrayBox'}\n          startTime={course.startTime}\n        />\n      );\n    });\n  }\n  render() {\n    return (\n      <div className='container'>\n        <Heading heading={this.props.heading} type='h2'></Heading>\n        {this.props.showInfo && (\n          <JumboListing\n            title={\"Bachelor's in Computer Science\"}\n            subtitle={'Cal Poly SLO'}\n            description={[\n              'Graduated with a 4.0 major GPA and 3.99 overall GPA',\n              \"Made Dean's Honors list for all quarters attended and President's Honors list for the 2018-2019 school year\",\n              // 'Intend to minor in Data Science and get a Masters in Computer Science',\n              'Data Science Fellow for 2020-2021 academic year',\n              'Active member of WISH, Hack4Impact',\n              'Relevant coursework discussed below',\n            ]}\n            gallery={\n              <Image\n                src={\n                  'https://upload.wikimedia.org/wikipedia/en/thumb/0/0e/Cal_Poly_Mustangs_logo.svg/1200px-Cal_Poly_Mustangs_logo.svg.png'\n                }\n                fluid\n                rounded\n                style={{ marginBottom: 10 }}\n              />\n            }\n            sourceCodeUrl={'https://github.com/rupaltotale'}\n            type={'ShadowBox'}\n            startTime={'Sept 2018'}\n            endTime={'June 2021'}\n          />\n        )}\n        {this.renderRelevantCoursework()}\n      </div>\n    );\n  }\n}\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  showInfo: PropTypes.bool,\n  heading: PropTypes.string,\n};\n\nEducation.defaultProps = {\n  showInfo: true,\n};\n","import React, { Component } from 'react';\n\nimport Heading from '../Components/Heading';\nimport { Image } from 'react-bootstrap';\nimport JumboListing from '../Components/JumboListing';\nimport PropTypes from 'prop-types';\n\nclass Experience extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  renderExperiences() {\n    return this.props.experiences.map((experience, index) => {\n      return (\n        <JumboListing\n          key={`experience-${index}`}\n          title={experience.title.split(',')[0]}\n          subtitle={experience.title.split(',')[1]}\n          description={experience.description}\n          tags={experience.tags}\n          gallery={\n            // `./${experience.gallery}.png`\n            <Image\n              style={{ marginBottom: 10 }}\n              src={experience.gallery}\n              fluid\n              rounded\n            />\n          }\n          startTime={experience.startTime}\n          endTime={experience.endTime}\n          type={'ShadowBox'}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <Heading heading={this.props.heading} type='h2'></Heading>\n        {this.renderExperiences()}\n      </div>\n    );\n  }\n}\n\nExperience.propTypes = {\n  experiences: PropTypes.array.isRequired,\n  heading: PropTypes.string.isRequired,\n};\n\nexport default Experience;\n","import React, { Component } from \"react\";\nimport { Jumbotron, FormControl, Button, Row, Col } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { ReCAPTCHA } from \"react-google-recaptcha\";\n\nclass ContactForm extends Component {\n  //   constructor(props) {\n  //     super(props);\n  //   }\n\n  renderSubmitButton() {\n    return (\n      <Row>\n        <Col sm md=\"auto\">\n          <Button style={{ float: \"right\" }} variant=\"success\" type=\"submit\">\n            Submit\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n\n  render() {\n    const recaptchaRef = React.createRef();\n    return (\n      <Jumbotron>\n        <form\n          action=\"https://www.form-data.com/_functions/submit/xd8igvkwkekuhax1d5g3ee\"\n          method=\"post\"\n          onSubmit={() => {\n            recaptchaRef.current.execute();\n          }}\n        >\n          {/* Name */}\n          <label>Full Name*</label>\n          <FormControl\n            type=\"textarea\"\n            name=\"name\"\n            className=\"mr-sm-2\"\n            required\n          />\n          {/* Message */}\n          <label>Message*</label>\n          <FormControl\n            as=\"textarea\"\n            rows=\"3\"\n            name=\"message\"\n            className=\"mr-sm-2\"\n            required\n          />\n          {/* Email */}\n          <label>Email*</label>\n          <FormControl\n            type=\"textarea\"\n            name=\"email\"\n            className=\"mr-sm-2\"\n            required\n          />\n          {/* Rating*/}\n          <label>Rate the site?</label>\n          <Select\n            options={[\n              {\n                label: \"1 - Needs improvement\",\n                value: \"1 - Needs improvement\",\n              },\n              { label: \"2 - No comment\", value: \"2 - No comment\" },\n              { label: \"3 - Good to go\", value: \"3 - Good to go\" },\n            ]}\n            name=\"rating\"\n          />\n          <ReCAPTCHA\n            ref={recaptchaRef}\n            size=\"invisible\"\n            sitekey=\"6LceZLwUAAAAAAc9Uob7Qa6dl0U4Ob1DAj3OXaC2\"\n          />\n          <br />\n          {/* Social icons and Submit Button */}\n          {this.renderSubmitButton()}\n        </form>\n      </Jumbotron>\n    );\n  }\n}\nexport default ContactForm;\n","import { Col, Container, Image, Jumbotron, Row } from \"react-bootstrap\";\nimport { FaCheckCircle } from \"react-icons/fa\";\n//import liraries\nimport React, { Component } from \"react\";\n\nimport ContactForm from \"../Components/ContactForm\";\nimport Heading from \"../Components/Heading\";\nimport { IconContext } from \"react-icons\";\nimport { aboutMe, profileImage } from \"../Data/Information.json\";\n\n// create a component\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.submitted = false;\n  }\n\n  componentDidUpdate() {\n    if (this.submitted) {\n      window.scroll({ top: 2500, left: 0, behavior: \"smooth\" });\n    }\n  }\n\n  renderAboutMe() {\n    return (\n      <div>\n        <Heading heading={\"About Me\"} type=\"h1\" hr={true} />\n        <Jumbotron className=\"jumbo-aboutme\">\n          <Container>\n            <Row>\n              <Col xs={12} md={3}\n                   style={{\n                     display: \"flex\",\n                     justifyContent: \"center\",\n                     alignItems: \"center\",\n                   }}>\n                <Image src={`${profileImage}?w=300`} roundedCircle fluid\n                       style={{boxShadow: \"0 2px 5px 0 black\"}} />\n              </Col>\n              <Col xs={12} md={9}>\n                <h3 style={{ color: \"wheat\" }}>Hi, I am Rupal.</h3>\n                {aboutMe\n                  .split(\"\\n\")\n                  .map((para, index) =>\n                    <p key={index}>{para}</p>,\n                  )}\n              </Col>\n            </Row>\n          </Container>\n        </Jumbotron>\n      </div>\n    );\n  }\n\n  renderFormSubmitted(name, message, email, rating) {\n    this.submitted = true;\n    return (\n      <Jumbotron\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <h3>Form submitted successfully</h3>\n        <IconContext.Provider\n          value={{ color: \"green\", className: \"global-class-name\" }}\n        >\n          <div style={{ padding: 10 }}>\n            <FaCheckCircle size={100} />\n          </div>\n        </IconContext.Provider>\n        <hr />\n        <h6 style={{ textAlign: \"center\" }}>\n          Thank you for reaching out! I will get back to you in around 1 - 2\n          business days. Here is what was submitted:\n        </h6>\n        <br />\n        <p>\n          <b>Name: </b> {name}\n        </p>\n        <p>\n          <b>Message: </b> {message}\n        </p>\n        <p>\n          <b>Email: </b> {email}\n        </p>\n        <p>\n          <b>Rating: </b> {rating ? rating : \"Not any\"}\n        </p>\n      </Jumbotron>\n    );\n  }\n\n  render() {\n    const queryString = require(\"query-string\");\n    const parsed = queryString.parse(this.props.location.search);\n    return (\n      <div className=\"container\">\n        {this.renderAboutMe()}\n\n        <Heading heading={\"Contact Me\"} type=\"h2\" hr={true}></Heading>\n\n        {parsed.submit ? (\n          this.renderFormSubmitted(\n            parsed[\"?name\"],\n            parsed.message,\n            parsed.email,\n            parsed.rating,\n          )\n        ) : (\n          <ContactForm />\n        )}\n      </div>\n    );\n  }\n}\n\n//make this component available to the app\nexport default Home;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { FaExternalLinkAlt } from \"react-icons/fa\";\n\nclass ExternalButton extends Component {\n  render() {\n    const { url, text, variant } = this.props;\n    return (\n      <Button\n        variant={variant}\n        onClick={() => {\n          window.open(\n            `${url}`,\n            \"_blank\" // <- This is what makes it open in a new window.\n          );\n        }}\n      >\n        {text} <FaExternalLinkAlt />\n      </Button>\n    );\n  }\n}\n\nExternalButton.propTypes = {\n  url: PropTypes.string,\n  text: PropTypes.string,\n  variant: PropTypes.string\n};\n\nexport default ExternalButton;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"react-bootstrap\";\nimport Description from \"./Description\";\nimport Tags from \"./Tags\";\nimport ExternalButton from \"./ExternalButton\";\nimport TimePeriod from \"./TimePeriod\";\n// create a component\n\nclass CardListing extends Component {\n  render() {\n    const { description, tags } = this.props;\n    return (\n      <Card bg=\"light\">\n        <a\n          href={this.props.galleryUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Card.Img\n            variant=\"top\"\n            src={this.props.galleryUrl}\n            className={\"project-image\"}\n          />\n        </a>\n        <Card.Body>\n          <Card.Title>\n            <h4>{this.props.title}</h4>\n          </Card.Title>\n          <Card.Text>\n            <TimePeriod\n              startTime={this.props.startTime}\n              endTime={this.props.endTime}\n            />\n            <Description description={description}></Description>\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          {/* <small className=\"text-muted\">Last updated 3 mins ago</small> */}\n          <Tags tags={tags}></Tags>\n          {this.props.sourceCodeUrl && (\n            <ExternalButton\n              text=\"Source Code\"\n              url={this.props.sourceCodeUrl}\n              variant=\"dark\"\n            ></ExternalButton>\n          )}\n        </Card.Footer>\n      </Card>\n    );\n  }\n}\n\nCardListing.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.arrayOf(PropTypes.string).isRequired,\n  tags: PropTypes.arrayOf(PropTypes.object).isRequired,\n  galleryUrl: PropTypes.string.isRequired,\n  startTime: PropTypes.string.isRequired,\n  // Optional\n  endTime: PropTypes.string,\n  sourceCodeUrl: PropTypes.string\n};\n//make this component available to the app\nexport default CardListing;\n","import React, { Component } from \"react\";\n\nimport { CardDeck } from \"react-bootstrap\";\nimport CardListing from \"../Components/CardListing\";\nimport Heading from \"../Components/Heading\";\nimport ProjectPicture from \"../Images/project.png\";\nimport PropTypes from \"prop-types\";\n\nexport default class Projects extends Component {\n  renderProjects() {\n    const decks = [];\n    let children = [];\n    this.props.projects.map((project, index) => {\n      children.push(\n        <CardListing\n          key={`project-item-${index}`}\n          title={project.title}\n          description={project.description}\n          tags={project.tags}\n          sourceCodeUrl={project.url ? project.url : null}\n          startTime={project.startTime}\n          endTime={project.endTime}\n          galleryUrl={project.gallery ? project.gallery : ProjectPicture}\n        />\n      );\n      if (index % 2) {\n        decks.push(\n          <CardDeck style={{ marginBottom: 30 }} key={`project-deck-${index}`}>\n            {children}\n          </CardDeck>\n        );\n        children = [];\n      }\n      return null;\n    });\n    decks.push(\n      <CardDeck style={{ marginBottom: 30 }} key={`project-deck-${-1}`}>\n        {children}\n      </CardDeck>\n    );\n    return <div>{decks}</div>;\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Heading heading={this.props.heading} type=\"h2\"></Heading>\n        {this.renderProjects()}\n      </div>\n    );\n  }\n}\nProjects.propTypes = {\n  projects: PropTypes.array.isRequired,\n  heading: PropTypes.string\n};\n","import React, { Component } from \"react\";\n\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport Heading from \"../Components/Heading\";\nimport Projects from \"./Projects\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nclass SearchResults extends Component {\n  constructor(props) {\n    super(props);\n    this.queryString = require(\"query-string\");\n    this.parsed = this.queryString.parse(this.props.location.search);\n  }\n  state = {\n    experiences: [],\n    education: [],\n    projects: [],\n    selectedTag: {}\n  };\n\n  componentDidUpdate() {\n    window.scroll({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.parsed = this.queryString.parse(newProps.location.search);\n    this.props = { ...newProps };\n    this.componentDidMount();\n  }\n\n  filterData(data) {\n    return (\n      data.tags\n        .map(tag => {\n          return tag.value;\n        })\n        .indexOf(this.parsed.tagValue) > -1\n    );\n  }\n\n  componentDidMount() {\n    const experiences = _.filter(this.props.experiences, experience =>\n      this.filterData(experience)\n    );\n    const education = _.filter(this.props.education, education =>\n      this.filterData(education)\n    );\n    const projects = _.filter(this.props.projects, project =>\n      this.filterData(project)\n    );\n    this.setState({\n      experiences,\n      education,\n      projects\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Heading\n          heading={`Search Results for ${this.parsed.tagLabel}`}\n          type=\"h1\"\n        ></Heading>\n        {this.state.education.length > 0 && (\n          <div>\n            <Education\n              education={this.state.education}\n              showInfo={false}\n              heading={`Course work related to ${this.parsed.tagLabel}`}\n            />\n          </div>\n        )}\n        {this.state.experiences.length > 0 && (\n          <div>\n            <Experience\n              experiences={this.state.experiences}\n              heading={`Experiences related to ${this.parsed.tagLabel}`}\n            />\n          </div>\n        )}\n        {this.state.projects.length > 0 && (\n          <div>\n            <Projects\n              projects={this.state.projects}\n              heading={`Projects related to ${this.parsed.tagLabel}`}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nSearchResults.propTypes = {\n  education: PropTypes.array,\n  experiences: PropTypes.array,\n  projects: PropTypes.array\n};\n\nexport default SearchResults;\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport React, { Component } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  NavLink,\n  Redirect,\n  Route,\n  HashRouter as Router,\n  Switch\n} from \"react-router-dom\";\nimport { SocialIcon } from \"react-social-icons\";\n\nimport API from \"./API\";\nimport ScrollToTop from \"./Components/ScrollToTop\";\nimport SearchBar from \"./Components/SearchBar\";\nimport Education from \"./Pages/Education\";\nimport Experience from \"./Pages/Experience\";\nimport Home from \"./Pages/Home\";\nimport Projects from \"./Pages/Projects\";\nimport SearchResults from \"./Pages/SearchResults\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.api = new API();\n  }\n\n  state = {\n    experiences: [],\n    education: [],\n    projects: [],\n    loading: true,\n    redirectToSearch: false,\n    selectedTag: null\n  };\n\n  componentDidMount() {\n    this.api.get(\"Experiences\", experiences => {\n      this.setState({ experiences });\n    });\n    this.api.get(\"Education\", education => {\n      this.setState({ education });\n    });\n    this.api.get(\"Projects\", projects => {\n      this.setState({ projects });\n    });\n  }\n\n  renderNavBar() {\n    const { experiences, education, projects } = this.state;\n    return (\n      <Navbar\n        expand=\"lg\"\n        sticky=\"top\"\n        // bg=\"light\"\n        // className=\"navbar\"\n      >\n        {/* <NavLink to=\"/home\"> */}\n\n        <NavLink\n          to=\"/home\"\n          className={\"titleNavLink\"}\n          activeClassName={\"titleNavLink\"}\n        >\n          Rupal Totale\n        </NavLink>\n        {/* </NavLink> */}\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink\n              to=\"/home\"\n              className={\"navlink\"}\n              activeClassName={\"navlink-active\"}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/education\"\n              className={\"navlink\"}\n              activeClassName={\"navlink-active\"}\n            >\n              Education\n            </NavLink>\n            <NavLink\n              to=\"/experience\"\n              className={\"navlink\"}\n              activeClassName={\"navlink-active\"}\n            >\n              Experience\n            </NavLink>\n            <NavLink\n              to=\"/projects\"\n              className={\"navlink\"}\n              activeClassName={\"navlink-active\"}\n            >\n              Projects\n            </NavLink>\n          </Nav>\n          <SearchBar\n            options={this.api.getUniqueTags(\n              experiences.length && education.length && projects.length\n            )}\n          ></SearchBar>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n\n  renderActivityIndicator() {\n    return (\n      <Loader\n        type=\"TailSpin\"\n        color=\"#111111\"\n        height={100}\n        width={100}\n        timeout={0}\n        className={\"activityIndicator\"}\n      />\n    );\n  }\n\n  renderContent() {\n    /* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */\n    const { experiences, projects, education } = this.state;\n    return (\n      <Switch>\n        <Route\n          path=\"/experience\"\n          render={props => (\n            <Experience\n              {...props}\n              experiences={experiences}\n              heading={\"Relevant Work Experiences\"}\n            />\n          )}\n        />\n        <Route\n          path=\"/education\"\n          render={props => (\n            <Education\n              {...props}\n              education={education}\n              heading={\"Computer Science Education\"}\n            />\n          )}\n        />\n        <Route\n          path=\"/projects\"\n          render={props => (\n            <Projects\n              {...props}\n              projects={projects}\n              heading={\"Featured Projects\"}\n            />\n          )}\n        />\n        <Route\n          path=\"/search\"\n          render={props => (\n            <SearchResults\n              {...props}\n              experiences={experiences}\n              education={education}\n              projects={projects}\n            />\n          )}\n        ></Route>\n        <Route path=\"/home\" component={Home} />\n\n        {/* If none of the previous routes render anything,\n      this route acts as a fallback. */}\n        <Route path=\"/\">\n          <Redirect to=\"/home\" component={Home} />\n        </Route>\n      </Switch>\n    );\n  }\n\n  renderSocialIcons() {\n    const socialMediaUrls = [\n      \"https://www.linkedin.com/in/rupal-totale-098360141/\",\n      \"https://github.com/rupaltotale\",\n      \"mailto:rupaltotale@gmail.com\"\n    ];\n    return (\n      <div>\n        {socialMediaUrls.map((url, index) => {\n          return (\n            <SocialIcon\n              key={`social-icon-${index}`}\n              url={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ margin: 10 }}\n            />\n          );\n        })}\n        {/* <Col xs md={\"auto\"}>\n          <ExternalButton\n            text=\"Resume\"\n            url=\"https://drive.google.com/file/d/1vMm9cj3EDBEbwMzjvXXTM0f8K09bDTVb/view?usp=sharing\"\n            variant=\"secondary\"\n          ></ExternalButton>\n        </Col> */}\n      </div>\n    );\n  }\n  renderFooter() {\n    return (\n      <footer>\n        {this.renderSocialIcons()}\n        <h6>© Rupal Totale</h6>\n      </footer>\n    );\n  }\n\n  render() {\n    const { experiences, projects, education } = this.state;\n    const isLoadingData =\n      !experiences.length && !projects.length && !education.length;\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <Router>\n            <ScrollToTop>\n              {this.renderNavBar()}\n              {isLoadingData\n                ? this.renderActivityIndicator()\n                : this.renderContent()}\n              <br></br>\n            </ScrollToTop>\n          </Router>\n        </div>\n        {this.renderFooter()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/custom.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/project.fbd3ef16.png\";"],"sourceRoot":""}