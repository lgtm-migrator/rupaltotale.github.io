{"version":3,"sources":["API.js","Components/ScrollToTop.js","Components/SearchBar.js","Components/Heading.js","Components/Description.js","Components/Tags.js","Components/TimePeriod.js","Components/JumboListing.js","Pages/Education.js","Pages/Experience.js","Components/ContactForm.js","Pages/Home.js","Components/ExternalButton.js","Components/CardListing.js","Pages/Projects.js","Pages/SearchResults.js","App.js","index.js","Images/project.png"],"names":["API","this","allTags","tagsFiltered","data","Experiences","Education","Projects","type","completion","getDataAsObjects","map","item","startTime","term","tags","tag","value","toLowerCase","trim","tagObj","label","getTagFormatted","push","sort","tag1","tag2","localeCompare","getSortByDate","comparisonArray","currentYear","Date","getFullYear","toString","obj1","obj2","date1","endTime","split","date2","length","indexOf","displayTag","npm","javascript","react","html","css","sql","scss","mongodb","mysql","express","xcode","jquery","php","json","wordpress","toUpperCase","slice","shouldReturn","_","uniqBy","ScrollToTop","prevProps","props","location","pathname","window","scrollTo","children","Component","withRouter","SearchBar","state","selectedTag","redirectToSearch","handleChange","setState","history","alert","Form","inline","options","name","styles","container","provided","width","margin","className","onChange","Button","variant","onClick","searchForTag","bind","Heading","Fragment","heading","style","textAlign","Description","description","index","key","Tags","fontWeight","renderTags","TimePeriod","color","JumboListing","Jumbotron","Container","title","subtitle","Row","gallery","Col","xs","md","education","course","sourceCodeUrl","showInfo","Image","src","fluid","rounded","marginBottom","renderRelevantCoursework","defaultProps","Experience","experiences","experience","company","renderExperiences","ContactForm","sm","float","recaptchaRef","React","createRef","action","method","onSubmit","current","execute","FormControl","required","as","rows","ref","size","sitekey","renderSubmitButton","Home","submitted","scroll","top","left","behavior","hr","display","justifyContent","alignItems","profileImage","roundedCircle","boxShadow","aboutMe","para","message","email","rating","flexDirection","Provider","padding","parsed","require","parse","search","renderAboutMe","submit","renderFormSubmitted","ExternalButton","url","text","open","CardListing","Card","bg","href","galleryUrl","target","rel","Img","Body","Title","Text","Footer","decks","projects","project","ProjectPicture","CardDeck","renderProjects","SearchResults","queryString","newProps","componentDidMount","tagValue","filter","filterData","tagLabel","App","loading","api","get","Navbar","expand","sticky","to","activeClassName","Toggle","aria-controls","Collapse","id","Nav","getUniqueTags","height","timeout","path","render","component","renderSocialIcons","isLoadingData","renderNavBar","renderActivityIndicator","renderContent","renderFooter","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.926b68cb.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport Experiences from \"./Data/Experiences.json\";\nimport Education from \"./Data/Education.json\";\nimport Projects from \"./Data/Projects.json\";\n\nexport default class API {\n  constructor() {\n    this.allTags = [];\n    this.tagsFiltered = false;\n    this.data = {\n      Experiences: Experiences,\n      Education: Education,\n      Projects: Projects,\n    };\n  }\n\n  get(type, completion) {\n    completion(this.getDataAsObjects(this.data[type]));\n  }\n\n  getDataAsObjects(data) {\n    return data\n      .map(item => ( {\n        ...item,\n        startTime: item.startTime ? item.startTime : item.term,\n        tags: item.tags\n          .map((tag) => {\n            const value = tag.toLowerCase().trim();\n            const tagObj = {\n              value,\n              label: this.getTagFormatted(value),\n            };\n            this.allTags.push(tagObj);\n            return tagObj;\n          })\n          .sort((tag1, tag2) => tag1.value.localeCompare(tag2.value)),\n      } ))\n      .sort(this.getSortByDate());\n  }\n\n  getSortByDate() {\n    const comparisonArray = [\n      \"Winter\",\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Spring\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Summer\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Fall\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n      \"Present\",\n    ];\n    const currentYear = new Date().getFullYear().toString();\n    return (obj1, obj2) => {\n      const date1 = obj1.endTime ? obj1.endTime.split(\" \") : obj1.startTime.split(\" \");\n      const date2 = obj2.endTime ? obj2.endTime.split(\" \") : obj2.startTime.split(\" \");\n      if (date1.length < 2) {\n        date1.push(currentYear);\n      }\n      if (date2.length < 2) {\n        date2.push(currentYear);\n      }\n      if (date1[1] === date2[1]) { // the year is the same...\n        return (\n          comparisonArray.indexOf(date2[0]) - comparisonArray.indexOf(date1[0])\n        );\n      }\n      return date2[1] - date1[1];\n    };\n  }\n\n  getTagFormatted(tag: string): String {\n    const special = {\n      npm: \"npm\",\n      javascript: \"JavaScript\",\n      react: \"React\",\n      \"react-native\": \"React-Native\",\n      html: \"HTML\",\n      css: \"CSS\",\n      sql: \"SQL\",\n      scss: \"SCSS\",\n      mongodb: \"MongoDB\",\n      mysql: \"MySQL\",\n      express: \"Express\",\n      xcode: \"XCode\",\n      jquery: \"jQuery\",\n      php: \"PHP\",\n      \"android studio\": \"Android Studio\",\n      json: \"JSON\",\n      \"ruby on rails\": \"Ruby on Rails\",\n      \"sql server\": \"SQL Server\",\n      wordpress: \"WordPress\",\n      \"visual basic\": \"Visual Basic\",\n      \"jdbc\": \"JDBC\",\n      \"machine learning\": \"Machine Learning / AI\",\n    };\n    const displayTag = special[tag];\n    return displayTag ? displayTag : tag[0].toUpperCase() + tag.slice(1);\n  }\n\n  getUniqueTags(shouldReturn: boolean) {\n    if (shouldReturn)\n      return _.uniqBy(this.allTags, \"value\").sort(function(tag1, tag2) {\n        return tag1.value.localeCompare(tag2.value);\n      });\n    return [];\n  }\n}\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import { Button, Form } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SearchBar extends Component {\n  static propTypes = {\n    options: PropTypes.array,\n  };\n\n  state = {\n    selectedTag: null,\n    redirectToSearch: false,\n  };\n\n  handleChange = (selectedTag) => {\n    this.setState({ selectedTag });\n  };\n\n  searchForTag() {\n    const { selectedTag } = this.state;\n    // this.setState({ selectedTag: null });\n    if (selectedTag) {\n      this.props.history.push(\n        `/search?tagValue=${selectedTag.value}&tagLabel=${selectedTag.label}`\n      );\n    } else {\n      alert(\"Please choose a tag to search for\");\n    }\n  }\n\n  render() {\n    return (\n      <Form inline>\n        <Select\n          options={this.props.options}\n          name=\"search\"\n          styles={{\n            container: (provided, state) => ({\n              ...provided,\n              width: 200,\n              margin: 5,\n            }),\n          }}\n          className=\"mr-sm-3\"\n          onChange={this.handleChange}\n          value={this.state.selectedTag}\n          // isMulti\n        />\n        <Button variant=\"secondary\" onClick={this.searchForTag.bind(this)}>\n          Search\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nclass Heading extends Component {\n  render() {\n    if (this.props.type === \"h2\") {\n      return (\n        <React.Fragment>\n          <h2>{this.props.heading}</h2>\n          <hr></hr>\n        </React.Fragment>\n      );\n    }\n    return (\n      <React.Fragment>\n        <h1 style={{ textAlign: \"center\" }}>{this.props.heading}</h1>\n        <hr className={\"style-one\"}></hr>\n      </React.Fragment>\n    );\n  }\n}\n\nHeading.propTypes = {\n  heading: PropTypes.string,\n  type: PropTypes.string\n};\n\nexport default Heading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaCheck } from \"react-icons/fa\";\n\nclass Description extends Component {\n  render() {\n    return this.props.description.map((item, index) => {\n      return (\n        <p key={\"description-\" + index}>\n          <FaCheck /> <span>{item}</span>\n        </p>\n      );\n    });\n  }\n}\n\nDescription.propTypes = {\n  description: PropTypes.arrayOf(String)\n};\n\nexport default Description;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Tags extends Component {\n  searchForTag(selectedTag) {\n    this.props.history.push(\n      `/search?tagValue=${selectedTag[0].value}&tagLabel=${selectedTag[0].label}`\n    );\n  }\n  renderTags() {\n    return this.props.tags.map((tag, index) => {\n      return (\n        <span key={\"tag-\" + index}>\n          <button\n            className={\"tag-button\"}\n            onClick={this.searchForTag.bind(this, [tag])}\n          >\n            {tag.label}\n          </button>\n          {/* {tag.label} */}\n        </span>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <p>\n        <span style={{ fontWeight: 500 }}>{\"Related Technologies: \"}</span>\n        {this.renderTags()}\n      </p>\n    );\n  }\n}\n\nTags.propTypes = {\n  tags: PropTypes.arrayOf(String)\n};\n\nexport default withRouter(Tags);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaCalendarAlt } from \"react-icons/fa\";\n\nclass TimePeriod extends Component {\n  render() {\n    return (\n      <p style={{ color: \"gray\" }}>\n        <FaCalendarAlt />\n        {` ${this.props.startTime}`}\n        {this.props.endTime ? ` - ${this.props.endTime}` : \"\"}\n      </p>\n    );\n  }\n}\n\nTimePeriod.propTypes = {\n  startTime: PropTypes.string.isRequired,\n  endTime: PropTypes.string\n};\n\nexport default TimePeriod;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\nimport Description from './Description';\nimport Tags from './Tags';\nimport TimePeriod from './TimePeriod';\n\nclass JumboListing extends Component {\n  render() {\n    const { description, tags } = this.props;\n    return (\n      <Jumbotron\n        className={\n          this.props.type === 'ShadowBox' ? 'jumbo-shadow' : 'jumbo-gray'\n        }\n      >\n        <Container>\n          <h3>\n            {this.props.title}{' '}\n            {this.props.subtitle && (\n              <span className='subtitle'>@ {this.props.subtitle}</span>\n            )}\n          </h3>\n          <TimePeriod\n            startTime={this.props.startTime}\n            endTime={this.props.endTime}\n          />\n          <hr />\n          <Row>\n            {this.props.gallery && (\n              <Col xs={12} md={5}>\n                {this.props.gallery}\n              </Col>\n            )}\n            <Col xs={12} md={this.props.gallery ? 7 : 12}>\n              <Description description={description}></Description>\n            </Col>\n          </Row>\n          <hr />\n          {tags && <Tags tags={tags}></Tags>}\n          {/* <ExternalButton\n            url=\"#\"\n            text=\"Learn More\"\n            variant=\"primary\"\n          ></ExternalButton> */}\n        </Container>\n      </Jumbotron>\n    );\n  }\n}\n\nJumboListing.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  description: PropTypes.arrayOf(PropTypes.string).isRequired,\n  startTime: PropTypes.string.isRequired,\n  // Optional\n  tags: PropTypes.arrayOf(PropTypes.object),\n  gallery: PropTypes.element,\n  endTime: PropTypes.string,\n  sourceCodeUrl: PropTypes.string,\n  type: PropTypes.oneOf(['GrayBox', 'ShadowBox']),\n};\n\nexport default JumboListing;\n","import React, { Component } from 'react';\n\nimport Heading from '../Components/Heading';\nimport { Image } from 'react-bootstrap';\nimport JumboListing from '../Components/JumboListing';\nimport PropTypes from 'prop-types';\n\nexport default class Education extends Component {\n  renderRelevantCoursework() {\n    return this.props.education.map((course, index) => {\n      return (\n        <JumboListing\n          key={`course-${index}`}\n          title={course.title}\n          description={course.description}\n          tags={course.tags}\n          sourceCodeUrl={'https://github.com/rupaltotale'}\n          type={'GrayBox'}\n          startTime={course.startTime}\n        />\n      );\n    });\n  }\n  render() {\n    return (\n      <div className='container'>\n        <Heading heading={this.props.heading} type='h2'></Heading>\n        {this.props.showInfo && (\n          <JumboListing\n            title={\"Bachelor's in Computer Science\"}\n            subtitle={'Cal Poly SLO'}\n            description={[\n              'Graduated with a 4.0 major GPA and 3.99 overall GPA',\n              \"Made Dean's Honors list for all quarters attended and President's Honors list for the 2018-2019 school year\",\n              // 'Intend to minor in Data Science and get a Masters in Computer Science',\n              'Data Science Fellow for 2020-2021 academic year',\n              'Active member of WISH, Hack4Impact',\n              'Relevant coursework discussed below',\n            ]}\n            gallery={\n              <Image\n                src={\n                  'https://upload.wikimedia.org/wikipedia/en/thumb/0/0e/Cal_Poly_Mustangs_logo.svg/1200px-Cal_Poly_Mustangs_logo.svg.png'\n                }\n                fluid\n                rounded\n                style={{ marginBottom: 10 }}\n              />\n            }\n            sourceCodeUrl={'https://github.com/rupaltotale'}\n            type={'ShadowBox'}\n            startTime={'Sept 2018'}\n            endTime={'June 2021'}\n          />\n        )}\n        {this.renderRelevantCoursework()}\n      </div>\n    );\n  }\n}\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  showInfo: PropTypes.bool,\n  heading: PropTypes.string,\n};\n\nEducation.defaultProps = {\n  showInfo: true,\n};\n","import React, { Component } from 'react';\n\nimport Heading from '../Components/Heading';\nimport { Image } from 'react-bootstrap';\nimport JumboListing from '../Components/JumboListing';\nimport PropTypes from 'prop-types';\n\nclass Experience extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  renderExperiences() {\n    return this.props.experiences.map((experience, index) => {\n      return (\n        <JumboListing\n          key={`experience-${index}`}\n          title={experience.title}\n          subtitle={experience.company}\n          description={experience.description}\n          tags={experience.tags}\n          gallery={\n            // `./${experience.gallery}.png`\n            <Image\n              style={{ marginBottom: 10 }}\n              src={experience.gallery}\n              fluid\n              rounded\n            />\n          }\n          startTime={experience.startTime}\n          endTime={experience.endTime}\n          type={'ShadowBox'}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <Heading heading={this.props.heading} type='h2'></Heading>\n        {this.renderExperiences()}\n      </div>\n    );\n  }\n}\n\nExperience.propTypes = {\n  experiences: PropTypes.array.isRequired,\n  heading: PropTypes.string.isRequired,\n};\n\nexport default Experience;\n","import React, { Component } from \"react\";\nimport { Jumbotron, FormControl, Button, Row, Col } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { ReCAPTCHA } from \"react-google-recaptcha\";\n\nclass ContactForm extends Component {\n  //   constructor(props) {\n  //     super(props);\n  //   }\n\n  renderSubmitButton() {\n    return (\n      <Row>\n        <Col sm md=\"auto\">\n          <Button style={{ float: \"right\" }} variant=\"success\" type=\"submit\">\n            Submit\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n\n  render() {\n    const recaptchaRef = React.createRef();\n    return (\n      <Jumbotron>\n        <form\n          action=\"https://api.form-data.com/f/ipkigdnxeawub9rjfzxb\"\n          method=\"post\"\n          onSubmit={() => {\n            recaptchaRef.current.execute();\n          }}\n        >\n          {/* Name */}\n          <label>Full Name*</label>\n          <FormControl\n            type=\"textarea\"\n            name=\"name\"\n            className=\"mr-sm-2\"\n            required\n          />\n          {/* Message */}\n          <label>Message*</label>\n          <FormControl\n            as=\"textarea\"\n            rows=\"3\"\n            name=\"message\"\n            className=\"mr-sm-2\"\n            required\n          />\n          {/* Email */}\n          <label>Email*</label>\n          <FormControl\n            type=\"textarea\"\n            name=\"email\"\n            className=\"mr-sm-2\"\n            required\n          />\n          {/* Rating*/}\n          <label>Rate the site?</label>\n          <Select\n            options={[\n              {\n                label: \"1 - Needs improvement\",\n                value: \"1 - Needs improvement\",\n              },\n              { label: \"2 - No comment\", value: \"2 - No comment\" },\n              { label: \"3 - Good to go\", value: \"3 - Good to go\" },\n            ]}\n            name=\"rating\"\n          />\n          <ReCAPTCHA\n            ref={recaptchaRef}\n            size=\"invisible\"\n            sitekey=\"6LceZLwUAAAAAAc9Uob7Qa6dl0U4Ob1DAj3OXaC2\"\n          />\n          <br />\n          {/* Social icons and Submit Button */}\n          {this.renderSubmitButton()}\n        </form>\n      </Jumbotron>\n    );\n  }\n}\nexport default ContactForm;\n","import { Col, Container, Image, Jumbotron, Row } from \"react-bootstrap\";\nimport { FaCheckCircle } from \"react-icons/fa\";\n//import liraries\nimport React, { Component } from \"react\";\n\nimport ContactForm from \"../Components/ContactForm\";\nimport Heading from \"../Components/Heading\";\nimport { IconContext } from \"react-icons\";\nimport { aboutMe, profileImage } from \"../Data/Information.json\";\n\n// create a component\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.submitted = false;\n  }\n\n  componentDidUpdate() {\n    if (this.submitted) {\n      window.scroll({ top: 2500, left: 0, behavior: \"smooth\" });\n    }\n  }\n\n  renderAboutMe() {\n    return (\n      <div>\n        <Heading heading={\"About Me\"} type=\"h1\" hr={true} />\n        <Jumbotron className=\"jumbo-aboutme\">\n          <Container>\n            <Row>\n              <Col xs={12} md={3}\n                   style={{\n                     display: \"flex\",\n                     justifyContent: \"center\",\n                     alignItems: \"center\",\n                   }}>\n                <Image src={`${profileImage}?w=300`} roundedCircle fluid\n                       style={{boxShadow: \"0 2px 5px 0 black\"}} />\n              </Col>\n              <Col xs={12} md={9}>\n                <h3 style={{ color: \"wheat\" }}>Hi, I am Rupal.</h3>\n                {aboutMe\n                  .split(\"\\n\")\n                  .map((para, index) =>\n                    <p key={index}>{para}</p>,\n                  )}\n              </Col>\n            </Row>\n          </Container>\n        </Jumbotron>\n      </div>\n    );\n  }\n\n  renderFormSubmitted(name, message, email, rating) {\n    this.submitted = true;\n    return (\n      <Jumbotron\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <h3>Form submitted successfully</h3>\n        <IconContext.Provider\n          value={{ color: \"green\", className: \"global-class-name\" }}\n        >\n          <div style={{ padding: 10 }}>\n            <FaCheckCircle size={100} />\n          </div>\n        </IconContext.Provider>\n        <hr />\n        <h6 style={{ textAlign: \"center\" }}>\n          Thank you for reaching out! I will get back to you soon :)\n        </h6>\n      </Jumbotron>\n    );\n  }\n\n  render() {\n    const queryString = require(\"query-string\");\n    const parsed = queryString.parse(this.props.location.search);\n    return (\n      <div className=\"container\">\n        {this.renderAboutMe()}\n\n        <Heading heading={\"Contact Me\"} type=\"h2\" hr={true}></Heading>\n\n        {parsed.submit ? (\n          this.renderFormSubmitted(\n            parsed[\"?name\"],\n            parsed.message,\n            parsed.email,\n            parsed.rating,\n          )\n        ) : (\n          <ContactForm />\n        )}\n      </div>\n    );\n  }\n}\n\n//make this component available to the app\nexport default Home;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { FaExternalLinkAlt } from \"react-icons/fa\";\n\nclass ExternalButton extends Component {\n  render() {\n    const { url, text, variant } = this.props;\n    return (\n      <Button\n        variant={variant}\n        onClick={() => {\n          window.open(\n            `${url}`,\n            \"_blank\" // <- This is what makes it open in a new window.\n          );\n        }}\n      >\n        {text} <FaExternalLinkAlt />\n      </Button>\n    );\n  }\n}\n\nExternalButton.propTypes = {\n  url: PropTypes.string,\n  text: PropTypes.string,\n  variant: PropTypes.string\n};\n\nexport default ExternalButton;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"react-bootstrap\";\nimport Description from \"./Description\";\nimport Tags from \"./Tags\";\nimport ExternalButton from \"./ExternalButton\";\nimport TimePeriod from \"./TimePeriod\";\n\n// create a component\n\nclass CardListing extends Component {\n  render() {\n    const { description, tags } = this.props;\n    return (\n      <Card bg=\"light\">\n        <a\n          href={this.props.galleryUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Card.Img\n            variant=\"top\"\n            src={this.props.galleryUrl}\n            className={\"project-image\"}\n          />\n        </a>\n        <Card.Body>\n          <Card.Title>\n            <h4>{this.props.title}</h4>\n          </Card.Title>\n          <Card.Text>\n            <TimePeriod\n              startTime={this.props.startTime}\n              endTime={this.props.endTime}\n            />\n            <Description description={description}></Description>\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          {/* <small className=\"text-muted\">Last updated 3 mins ago</small> */}\n          <Tags tags={tags}></Tags>\n          {this.props.sourceCodeUrl && (\n            <ExternalButton\n              text=\"Learn More\"\n              url={this.props.sourceCodeUrl}\n              variant=\"dark\"\n            ></ExternalButton>\n          )}\n        </Card.Footer>\n      </Card>\n    );\n  }\n}\n\nCardListing.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.arrayOf(PropTypes.string).isRequired,\n  tags: PropTypes.arrayOf(PropTypes.object).isRequired,\n  galleryUrl: PropTypes.string.isRequired,\n  startTime: PropTypes.string.isRequired,\n  // Optional\n  endTime: PropTypes.string,\n  sourceCodeUrl: PropTypes.string\n};\n//make this component available to the app\nexport default CardListing;\n","import React, { Component } from \"react\";\n\nimport { CardDeck } from \"react-bootstrap\";\nimport CardListing from \"../Components/CardListing\";\nimport Heading from \"../Components/Heading\";\nimport ProjectPicture from \"../Images/project.png\";\nimport PropTypes from \"prop-types\";\n\nexport default class Projects extends Component {\n  renderProjects() {\n    const decks = [];\n    let children = [];\n    this.props.projects.map((project, index) => {\n      children.push(\n        <CardListing\n          key={`project-item-${index}`}\n          title={project.title}\n          description={project.description}\n          tags={project.tags}\n          sourceCodeUrl={project.url ? project.url : null}\n          startTime={project.startTime}\n          endTime={project.endTime}\n          galleryUrl={project.gallery ? project.gallery : ProjectPicture}\n        />\n      );\n      if (index % 2) {\n        decks.push(\n          <CardDeck style={{ marginBottom: 30 }} key={`project-deck-${index}`}>\n            {children}\n          </CardDeck>\n        );\n        children = [];\n      }\n      return null;\n    });\n    decks.push(\n      <CardDeck style={{ marginBottom: 30 }} key={`project-deck-${-1}`}>\n        {children}\n      </CardDeck>\n    );\n    return <div>{decks}</div>;\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Heading heading={this.props.heading} type=\"h2\"></Heading>\n        {this.renderProjects()}\n      </div>\n    );\n  }\n}\nProjects.propTypes = {\n  projects: PropTypes.array.isRequired,\n  heading: PropTypes.string\n};\n","import React, { Component } from \"react\";\n\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport Heading from \"../Components/Heading\";\nimport Projects from \"./Projects\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nclass SearchResults extends Component {\n  constructor(props) {\n    super(props);\n    this.queryString = require(\"query-string\");\n    this.parsed = this.queryString.parse(this.props.location.search);\n  }\n  state = {\n    experiences: [],\n    education: [],\n    projects: [],\n    selectedTag: {}\n  };\n\n  componentDidUpdate() {\n    window.scroll({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.parsed = this.queryString.parse(newProps.location.search);\n    this.props = { ...newProps };\n    this.componentDidMount();\n  }\n\n  filterData(data) {\n    return (\n      data.tags\n        .map(tag => {\n          return tag.value;\n        })\n        .indexOf(this.parsed.tagValue) > -1\n    );\n  }\n\n  componentDidMount() {\n    const experiences = _.filter(this.props.experiences, experience =>\n      this.filterData(experience)\n    );\n    const education = _.filter(this.props.education, education =>\n      this.filterData(education)\n    );\n    const projects = _.filter(this.props.projects, project =>\n      this.filterData(project)\n    );\n    this.setState({\n      experiences,\n      education,\n      projects\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Heading\n          heading={`Search Results for ${this.parsed.tagLabel}`}\n          type=\"h1\"\n        ></Heading>\n        {this.state.education.length > 0 && (\n          <div>\n            <Education\n              education={this.state.education}\n              showInfo={false}\n              heading={`Course work related to ${this.parsed.tagLabel}`}\n            />\n          </div>\n        )}\n        {this.state.experiences.length > 0 && (\n          <div>\n            <Experience\n              experiences={this.state.experiences}\n              heading={`Experiences related to ${this.parsed.tagLabel}`}\n            />\n          </div>\n        )}\n        {this.state.projects.length > 0 && (\n          <div>\n            <Projects\n              projects={this.state.projects}\n              heading={`Projects related to ${this.parsed.tagLabel}`}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nSearchResults.propTypes = {\n  education: PropTypes.array,\n  experiences: PropTypes.array,\n  projects: PropTypes.array\n};\n\nexport default SearchResults;\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport React, { Component } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  NavLink,\n  Redirect,\n  Route,\n  HashRouter as Router,\n  Switch\n} from \"react-router-dom\";\nimport { SocialIcon } from \"react-social-icons\";\n\nimport API from \"./API\";\nimport ScrollToTop from \"./Components/ScrollToTop\";\nimport SearchBar from \"./Components/SearchBar\";\nimport Education from \"./Pages/Education\";\nimport Experience from \"./Pages/Experience\";\nimport Home from \"./Pages/Home\";\nimport Projects from \"./Pages/Projects\";\nimport SearchResults from \"./Pages/SearchResults\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.api = new API();\n  }\n\n  state = {\n    experiences: [],\n    education: [],\n    projects: [],\n    loading: true,\n    redirectToSearch: false,\n    selectedTag: null\n  };\n\n  componentDidMount() {\n    this.api.get(\"Experiences\", experiences => {\n      this.setState({ experiences });\n    });\n    this.api.get(\"Education\", education => {\n      this.setState({ education });\n    });\n    this.api.get(\"Projects\", projects => {\n      this.setState({ projects });\n    });\n  }\n\n  renderNavBar() {\n    const { experiences, education, projects } = this.state;\n    return (\n      <Navbar\n        expand=\"lg\"\n        sticky=\"top\"\n        // bg=\"light\"\n        // className=\"navbar\"\n      >\n        {/* <NavLink to=\"/home\"> */}\n\n        <NavLink\n          to=\"/home\"\n          className={\"titleNavLink\"}\n          activeClassName={\"titleNavLink\"}\n        >\n          RT\n        </NavLink>\n        {/* </NavLink> */}\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink\n              to=\"/home\"\n              className={\"navlink\"}\n              activeClassName={\"navlink-active\"}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/education\"\n              className={\"navlink\"}\n              activeClassName={\"navlink-active\"}\n            >\n              Education\n            </NavLink>\n            <NavLink\n              to=\"/experience\"\n              className={\"navlink\"}\n              activeClassName={\"navlink-active\"}\n            >\n              Experience\n            </NavLink>\n            <NavLink\n              to=\"/projects\"\n              className={\"navlink\"}\n              activeClassName={\"navlink-active\"}\n            >\n              Projects\n            </NavLink>\n          </Nav>\n          <SearchBar\n            options={this.api.getUniqueTags(\n              experiences.length && education.length && projects.length\n            )}\n          ></SearchBar>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n\n  renderActivityIndicator() {\n    return (\n      <Loader\n        type=\"TailSpin\"\n        color=\"#111111\"\n        height={100}\n        width={100}\n        timeout={0}\n        className={\"activityIndicator\"}\n      />\n    );\n  }\n\n  renderContent() {\n    /* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */\n    const { experiences, projects, education } = this.state;\n    return (\n      <Switch>\n        <Route\n          path=\"/experience\"\n          render={props => (\n            <Experience\n              {...props}\n              experiences={experiences}\n              heading={\"Relevant Work Experiences\"}\n            />\n          )}\n        />\n        <Route\n          path=\"/education\"\n          render={props => (\n            <Education\n              {...props}\n              education={education}\n              heading={\"Computer Science Education\"}\n            />\n          )}\n        />\n        <Route\n          path=\"/projects\"\n          render={props => (\n            <Projects\n              {...props}\n              projects={projects}\n              heading={\"Featured Projects\"}\n            />\n          )}\n        />\n        <Route\n          path=\"/search\"\n          render={props => (\n            <SearchResults\n              {...props}\n              experiences={experiences}\n              education={education}\n              projects={projects}\n            />\n          )}\n        ></Route>\n        <Route path=\"/home\" component={Home} />\n\n        {/* If none of the previous routes render anything,\n      this route acts as a fallback. */}\n        <Route path=\"/\">\n          <Redirect to=\"/home\" component={Home} />\n        </Route>\n      </Switch>\n    );\n  }\n\n  renderSocialIcons() {\n    const socialMediaUrls = [\n      \"https://www.linkedin.com/in/rupal-totale-098360141/\",\n      \"https://github.com/rupaltotale\",\n      \"mailto:rupaltotale@gmail.com\"\n    ];\n    return (\n      <div>\n        {socialMediaUrls.map((url, index) => {\n          return (\n            <SocialIcon\n              key={`social-icon-${index}`}\n              url={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ margin: 10 }}\n            />\n          );\n        })}\n        {/* <Col xs md={\"auto\"}>\n          <ExternalButton\n            text=\"Resume\"\n            url=\"https://drive.google.com/file/d/1vMm9cj3EDBEbwMzjvXXTM0f8K09bDTVb/view?usp=sharing\"\n            variant=\"secondary\"\n          ></ExternalButton>\n        </Col> */}\n      </div>\n    );\n  }\n  renderFooter() {\n    return (\n      <footer>\n        {this.renderSocialIcons()}\n        <h6>© Rupal Totale</h6>\n      </footer>\n    );\n  }\n\n  render() {\n    const { experiences, projects, education } = this.state;\n    const isLoadingData =\n      !experiences.length && !projects.length && !education.length;\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <Router>\n            <ScrollToTop>\n              {this.renderNavBar()}\n              {isLoadingData\n                ? this.renderActivityIndicator()\n                : this.renderContent()}\n              <br></br>\n            </ScrollToTop>\n          </Router>\n        </div>\n        {this.renderFooter()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/custom.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/project.fbd3ef16.png\";"],"sourceRoot":""}